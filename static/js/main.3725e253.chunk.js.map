{"version":3,"sources":["lib/firebase.js","contexts/AuthContext.js","admin/AdminFunc.js","account/Login.js","components/Dashboard.js","account/Signup.js","account/ForgotPassword.js","components/Profile.js","components/Private.js","account/UpdateProfile.js","components/Navigation.js","components/RoutesView.js","components/Routes.js","components/Home.js","account/AttComp.js","account/Attempt.js","account/AccountView.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","db","firestore","route","callback","a","temp","Color","Name","Attempts","collection","doc","uid","get","res","currentUserData","data","attemptedClimbs","attemptedRoutes","push","console","log","update","then","catch","e","addUserToFirestore","set","type","msg","Login","emailRef","useRef","passwordRef","error","setError","history","useHistory","preventDefault","current","alert","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","ref","required","Button","disabled","to","Dashboard","pushState","onClick","Signup","passwordConfirmRef","ForgotPassword","message","setMessage","Profile","Private","Component","component","rest","render","props","UpdateProfile","promises","Promise","all","finally","defaultValue","placeholder","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Brand","href","RoutesView","key","setFave","fave","storage","attempts","setAttempts","click","setClick","tempRoute","setTempRoute","tempFaves","index","indexOf","splice","handleFaveToggle","Grade","Setter","min","max","onChange","target","prevState","addRouteToFirebase","Routes","routesProps","Table","striped","bordered","map","Home","Accordion","defaultActiveKey","as","Header","eventKey","AttComp","attempt","Attempt","onSnapshot","querySnapshot","allAttempts","forEach","userUID","AccountView","App","routes","setRoutes","faveRoutes","setFaveRoutes","allRoutes","path","Container","style","minHeight","maxWidth","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3725e253.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    projectId: process.env.REACT_APP_PROJECTID,\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_APPID\n  });\n\n\nexport const auth = app.auth();\nexport default app;\n\n\n","import React, {useContext, useEffect, useState} from 'react'\nimport {auth} from '../lib/firebase';\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({children}) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n    \n    function signup(email, password){\n       return auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    function login(email,password){\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout(){\n        return auth.signOut()\n    }\n\n    function resetPassword(email){\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email){\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password){\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(()=>{\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })  \n        \n        return unsubscribe\n    }, [])\n\n    const value={\n        currentUser,\n        login,\n        signup,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import firebase from \"../lib/firebase\";\nconst db = firebase.firestore();\n\n// let routes = [\n//     {   \n//         id: 1,\n//         Color: \"Blue\",\n//         Name: \"Devils Trill\",\n//         Grade: 1,\n//         Setter: \"Izzu\"\n//     },\n//     {\n//         id: 2,\n//         Color: \"Green\",\n//         Name: \"Achtung!\",\n//         Grade: 2,\n//         Setter: \"Izzu\"\n//     },\n//     {\n//         id: 3,\n//         Color: \"Black\",\n//         Name: \"Streak\",\n//         Grade: 4,\n//         Setter: \"Izzu\"\n//     },\n//     {\n//         id: 4,\n//         Color: \"Purple\",\n//         Name: \"Judgy\",\n//         Grade: 3,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 5,\n//         Color: \"Black\",\n//         Name: \"Darkness\",\n//         Grade: 3,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 6,\n//         Color: \"Yellow\",\n//         Name: \"Half Past 3\",\n//         Grade: 4,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 7,\n//         Color: \"Green\",\n//         Name: \"Intro T(w)o\",\n//         Grade: 2,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 8,\n//         Color: \"Yellow\",\n//         Name: \"Stand Up\",\n//         Grade: 3,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 9,\n//         Color: \"Blue\",\n//         Name: \"Throw Game\",\n//         Grade: 6,\n//         Setter: \"Rubin\"\n//     },\n//     {\n//         id: 10,\n//         Color: \"Pink\",\n//         Name: \"Sandbaggy\",\n//         Grade: 2,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 11,\n//         Color: \"Black\",\n//         Name: \"Ramadance\",\n//         Grade: 4,\n//         Setter: \"Feroz\"\n//     },\n//     {\n//         id: 12,\n//         Color: \"Blue\",\n//         Name: \"Blue Valentine\",\n//         Grade: 1,\n//         Setter: \"Adi\"\n//     },\n//     {\n//         id: 13,\n//         Color: \"Green\",\n//         Name: \"Green Mile\",\n//         Grade: 2,\n//         Setter: \"Adi\"\n//     },\n//     {\n//         id: 14,\n//         Color: \"Orange\",\n//         Name: \"Clockwork Orange\",\n//         Grade: 3,\n//         Setter: \"Adi\"\n//     },\n//     {\n//         id: 15,\n//         Color: \"Green\",\n//         Name: \"Jack In The Beanstalk\",\n//         Grade: 1,\n//         Setter: \"Chris\"\n//     },\n//     {\n//         id: 16,\n//         Color: \"Black\",\n//         Name: \"Santa In The Chimney\",\n//         Grade: 2,\n//         Setter: \"Chris\"\n//     },\n//     {\n//         id: 17,\n//         Color: \"Pink\",\n//         Name: \"Iron Hearts\",\n//         Grade: 3,\n//         Setter: \"chris\"\n//     },\n//     {\n//         id: 18,\n//         Color: \"White\",\n//         Name: \"Head Scratcher\",\n//         Grade: 2,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 19,\n//         Color: \"Yellow\",\n//         Name: \"Hollow Yellow\",\n//         Grade: 3,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 20,\n//         Color: \"Purple\",\n//         Name: \"Izzu Says 5\",\n//         Grade: 4,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 21,\n//         Color: \"Green\",\n//         Name: \"Lost In The Forest\",\n//         Grade: 1,\n//         Setter: \"Zam\"\n//     },\n//     {\n//         id: 22,\n//         Color: \"Purple\",\n//         Name: \"Girl Crush\",\n//         Grade: 3,\n//         Setter: \"Rubin\"\n//     },\n//     {\n//         id: 23,\n//         Color: \"Yellow\",\n//         Name: \"So Meh\",\n//         Grade: 4,\n//         Setter: \"Shaun\"\n//     },\n//     {\n//         id: 24,\n//         Color: \"Red\",\n//         Name: \"Check Left\",\n//         Grade: 3,\n//         Setter: \"Rubin\"\n//     },\n//     {\n//         id: 25,\n//         Color: \"White\",\n//         Name: \"Cumulonumbus\",\n//         Grade: 2,\n//         Setter: \"Lim Chen\"\n//     },\n//     {\n//         id: 26,\n//         Color: \"Purple\",\n//         Name: \"Unfriendly Barney\",\n//         Grade: 4,\n//         Setter: \"Feroz\"\n//     },\n//     {\n//         id: 27,\n//         Color: \"Blue\",\n//         Name: \"Breathe\",\n//         Grade: 4,\n//         Setter: \"Hilman\"\n//     },\n//     {\n//         id: 28,\n//         Color: \"Black\",\n//         Name: \"Squid Ink\",\n//         Grade: 5,\n//         Setter: \"Hilman\"\n//     },\n//     {\n//         id: 29,\n//         Color: \"Yello\",\n//         Name: \"Sunny Day\",\n//         Grade: 2,\n//         Setter: \"Zam\"\n//     },\n//     {\n//         id: 30,\n//         Color: \"Red\",\n//         Name: \"Blood Line\",\n//         Grade: 4,\n//         Setter: \"Zam\"\n//     },\n//     {\n//         id: 31,\n//         Color: \"White\",\n//         Name: \"Bucket List\",\n//         Grade: 1,\n//         Setter: \"Zam\"\n//     },\n//     {\n//         id: 32,\n//         Color: \"Purple\",\n//         Name: \"Hyper\",\n//         Grade: 2,\n//         Setter: \"Zam\"\n//     },\n//     {\n//         id: 33,\n//         Color: \"Red\",\n//         Name: \"Twister\",\n//         Grade: 4,\n//         Setter: \"Zam\"\n//     }\n// ]\n\nexport function addRoutesToFirebase(routeArray){\n\n    routeArray.forEach(el => {\n        db.collection('LeadWallFunan').add(el)\n    })\n\n}\n\nexport function getRoutesFromFirebase(callback){\nconsole.log(\"hi there\");\n    db.collection(\"LeadWallFunan\").onSnapshot(querySnapshot => {\n        let allRoutes = []\n        querySnapshot.forEach(doc => {\n            // console.log(doc.id);\n            allRoutes.push(doc.data())\n        })\n        callback(allRoutes)\n    })\n}\n\n\nexport async function addRouteToFirebase(currentUser, route, callback){\n    let temp = {\n        ...route,\n        Color: route.Color,\n        Name: route.Name,\n        Attempts: route.Attempts\n    }\n    \n    let res = await (await db.collection('Users').doc(currentUser.uid).get())\n    let currentUserData = res.data()\n    let attemptedClimbs = currentUserData.attemptedRoutes\n    // if(attemptedClimbs.findIndex(route=>route.id === temp.id)){\n    //     console.log(\"Your momma\")\n        \n    // } else {\n        \n    // }\n    attemptedClimbs.push(temp)\n\n    console.log(attemptedClimbs);\n\n    db.collection(\"Users\").doc(currentUser.uid).update({\n        \"attemptedRoutes\": attemptedClimbs\n    })\n        .then(doc => {\n            callback(\"Succesfully added into database\")\n        }).catch(e => {\n            callback(\"no yo\")\n        })\n\n}\n\nexport function addUserToFirestore(currentUser, callback){\n    \n        db.collection(\"Users\").doc(currentUser.uid).set(\"\")\n            .then(doc => {\n                callback({type: \"success\", msg:\"Route Added\"})\n            }).catch(e => {\n                callback({type: \"danger\", msg:\"Route not Added\"})\n            })\n    }\n\n\n\nexport function getAttemptsFromFirebase(callback, currentUser){\n            db.collection(\"Users\").onSnapshot(querySnapshot => {\n                let allAttempts = []\n                querySnapshot.forEach(userUID => {\n                    // console.log(doc.id);\n                    allAttempts.push(userUID.data())\n                })\n               return callback(allAttempts)\n        })\n}\n\n","import React, {useRef, useState} from 'react';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport {useAuth} from '../contexts/AuthContext';\nimport {Link, useHistory} from 'react-router-dom';\nimport { addUserToFirestore } from '../admin/AdminFunc';\n\nexport default function Login() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const {login} = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n    const { currentUser } =  useAuth();\n\n    async function handleSubmit (e){\n        e.preventDefault();\n\n        try{\n            setError(\"\");\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value);\n            history.push(\"/home\")\n            addUserToFirestore(currentUser, alert)\n\n        } catch {\n            setError(\"Failed to log in\");\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <div>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log In</h2>\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\n                </Card.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id='email'>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" ref={emailRef} required />\n                    </Form.Group>\n                    <Form.Group id='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" ref={passwordRef} required />\n                    </Form.Group> \n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\n                </Form>\n                <div className=\"w-100 text-center mt-3\">\n                    <Link to=\"/forgot-password\">Forgot Password?</Link>\n                </div>  \n\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\n            </div>\n            \n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { Card, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\n\nexport default function Dashboard() {\n    const [error, setError] = useState('');\n    const {currentUser, logout} = useAuth();\n    const history = useHistory();\n\n\n    async function handleLogout(){\n        setError(\"\")\n\n        try {\n            await logout()\n            history.pushState(\"/login\")\n        } catch {\n            setError(\"Failed to log out\")\n        }\n    }\n\n    return (\n        <div>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Choose what you like babe.</h2>\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\n                    <strong>Email:</strong> {currentUser.email}\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n                        Update Profile\n                    </Link>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\n            </div>\n        </div>\n    )\n}\n","import React, {useRef, useState} from 'react';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport {useAuth} from '../contexts/AuthContext';\nimport {Link, useHistory} from 'react-router-dom';\n\nexport default function Signup() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const {signup} = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    async function handleSubmit (e){\n        e.preventDefault();\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError(\"Passwords do not match\");\n        }\n\n        try{\n            setError(\"\");\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value);\n            history.push(\"/\")\n\n        } catch {\n            setError(\"Failed to create an account\");\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <div>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\n                </Card.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id='email'>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" ref={emailRef} required />\n                    </Form.Group>\n                    <Form.Group id='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" ref={passwordRef} required />\n                    </Form.Group>\n                    <Form.Group id='password-confirm'>\n                        <Form.Label>Password Confirmation</Form.Label>\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                    </Form.Group>\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\n                </Form>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n            </div>\n            \n        </div>\n    )\n}","import React, {useRef, useState} from 'react';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport {useAuth} from '../contexts/AuthContext';\nimport {Link} from 'react-router-dom';\n\nexport default function ForgotPassword() {\n    const emailRef = useRef();\n    const {resetPassword} = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    async function handleSubmit (e){\n        e.preventDefault();\n\n        try{\n            setMessage(\"\");\n            setError(\"\");\n            setLoading(true)\n            await resetPassword(emailRef.current.value);\n            setMessage(\"Check your inbox for further instructions\");\n        } catch {\n            setError(\"Failed to reset password\");\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <div>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\n                    {message && <Alert variant=\"success\"> {message} </Alert>}\n                </Card.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id='email'>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" ref={emailRef} required />\n                    </Form.Group>\n                    \n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\n                </Form>\n                <div className=\"w-100 text-center mt-3\">\n                    <Link to=\"/login\">Login</Link>\n                </div>  \n\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\n            </div>\n            \n        </div>\n    )\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default function Profile() {\n    return (\n        <div>\n            <div>\n                <NavLink className=\"nav-link\" to=\"/logout\">\n                    Update Profile or log out here\n                </NavLink>\n            </div>\n\n\n            This will be profile view. \n            Now how do I affect the routes after they have selected them from home?\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Private({ component: Component, ...rest}) {\n    const { currentUser } = useAuth();\n\n    // This will be used for retrieving specific data.\n    // will most likely implement when research about database is done.\n    // console.log(currentUser.email);\n    \n    return (\n        <Route\n          {...rest}\n          render ={props => {\n            return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n          }}\n        >\n            \n        </Route>\n    )\n}\n","import React, {useRef, useState} from 'react';\nimport { Card, Button, Form, Alert } from 'react-bootstrap';\nimport {useAuth} from '../contexts/AuthContext';\nimport {Link, useHistory} from 'react-router-dom';\n\nexport default function UpdateProfile() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const {currentUser, updatePassword, updateEmail } = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    function handleSubmit (e){\n        e.preventDefault();\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError(\"Passwords do not match\");\n        }\n\n        const promises = [];\n        setLoading(true);\n        setError(\"\");\n\n        if(emailRef.current !== currentUser.email){\n            promises.push(updateEmail(emailRef.current.value))\n        }\n\n        if(passwordRef.current.value){\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises).then(()=>{\n            history.push('/')\n        }).catch(()=>{\n            setError('failed to update account')\n        }).finally(()=>{\n            setLoading(false)\n        })\n        \n    }\n\n    return (\n        <div>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\n                </Card.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group id='email'>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email}/>\n                    </Form.Group>\n                    <Form.Group id='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" ref={passwordRef} \n                        placeholder=\"Leave blank to keep the same\" />\n                    </Form.Group>\n                    <Form.Group id='password-confirm'>\n                        <Form.Label>Password Confirmation</Form.Label>\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} \n                        placeholder=\"Leave blank to keep the same\"/>\n                    </Form.Group>\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\n                </Form>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Link to=\"/\">Cancel</Link>\n            </div>\n            \n        </div>\n    )\n}","import React from 'react';\nimport {Nav, Navbar} from 'react-bootstrap'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Navigation(){\n\n    return(\n    \n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"flex-grow-0\">\n            <Nav>\n                <NavLink to=\"/home\" className=\"nav-link\">Home</NavLink>\n                <NavLink to=\"/routes\" className=\"nav-link\">Routes</NavLink>\n            </Nav>\n        </Navbar.Collapse>\n        <Navbar.Brand href=\"/home\" className=\"mx-auto\">Roùte de la Roùte</Navbar.Brand>\n        <Nav>\n        <NavLink to=\"/account\" className=\"nav-link\">Account</NavLink>\n        <NavLink to=\"/profile\" className=\"nav-link\">Profile</NavLink>\n        </Nav>\n    </Navbar>\n    \n    )\n}\n\nexport default Navigation;","import React, { useState, useEffect } from 'react';\nimport { Heart, HeartFill, Save } from 'react-bootstrap-icons';\nimport { addRouteToFirebase } from '../admin/AdminFunc';\nimport { useAuth } from '../contexts/AuthContext';\nimport {Button} from 'react-bootstrap';\n\nexport default function RoutesView({key, route, setFave, fave, storage }) {\n    const [attempts, setAttempts] = useState(\"\");\n    const [click, setClick] = useState(false);\n    const [tempRoute, setTempRoute] = useState({});\n    const { currentUser } = useAuth();\n\n    function storeNumberOfAttempts(e){\n        setAttempts(\"\");\n        let temp = {...route};\n\n        if(e.target.value < 100){\n            setAttempts(e.target.value)\n        } else {\n            alert (\"Don't lie\")\n        }\n        setTempRoute(prevState => {\n           return {...prevState,...temp, Attempts: e.target.value}\n        });\n    }\n\n    function handleFaveToggle(route){\n        let tempFaves = [...fave]\n        let index = tempFaves.indexOf(route)\n        setClick(!click)\n\n        if (index > -1){\n            tempFaves.splice(index, 1)\n        } else {\n            tempFaves.push(route)\n        }\n        setFave(tempFaves)\n    }\n\n    return (\n        <tr>\n            <td>\n                {route.Name} \n                <i className=\"btn\" onClick={()=>handleFaveToggle(route)}>{click ? <HeartFill /> : <Heart />}</i>\n            </td>\n            <td>\n                {route.Color}\n            </td>\n            <td>\n                {route.Grade}\n            </td>\n            <td>\n                {route.Setter}\n            </td>\n            <td>\n                {attempts} Attempts | Change this code to be reactive to firebase edit\n            </td>\n            <td>\n                <input \n                type=\"number\" \n                min=\"0\"\n                max=\"101\"\n                placeholder=\"edit\" \n                onChange={storeNumberOfAttempts}\n                />\n                <Button className=\"m-2\" onClick={()=>addRouteToFirebase(currentUser, tempRoute, alert)}><Save /></Button>\n            </td>\n            \n        </tr>\n    )\n}\n\n// <td>Can add input field for number of attempts\n//  connect it to the account so that only if the user is logged in\n//  it will show.</td>\n\n// For bookmarking\n//<i className=\"btn\" onClick={()=>changeHeart()}>{click ? <BookmarkFill /> : <Bookmark />}</i>\n","import React, { useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport RoutesView from './RoutesView';\n// import { addRoutesToFirebase } from '../admin/AdminFunc';\n\n\nexport default function Routes({ routesProps, setFave, fave }) {\n    let storage = [];\n\n    // console.log(routesProps);\n\n    return (\n\n        <Table striped bordered>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Color</th>\n                    <th>Grade (Pie)</th>\n                    <th>Setter</th>\n                    <th>Attempts</th>\n                    <th>Edit here</th>\n                </tr>\n                    </thead>\n                    <tbody>\n                {routesProps.map(route => (\n                    <RoutesView \n                    key={route.id}\n                    route={route} \n                    fave={fave}\n                    setFave={setFave}\n                    storage={storage}\n                    \n                    />\n                ))}\n                \n            </tbody>\n            </Table>     \n\n    )\n}\n\n// import the array here then add routes using this little code below.\n// <th><Button onClick={()=>addRoutesToFirebase(routes1)}>This is the button</Button></th>\n\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Accordion, Card } from 'react-bootstrap';\n\nexport default function Home() {\n    return (\n        <div>\n            This is the Home page.\n            <br/>\n            This page will show the multiple gyms that are available in the app.\n            <br/>\n            For now, this page will render only below info.\n            <hr / >\n\n            <div>\n                Please Choose Gym to view routes.\n            </div>\n            <div>\n                \n            </div>\n            <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    Climb Central\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <NavLink to=\"/routes\">Climb Central Funan</NavLink>\n                        <br />\n                        <NavLink to=\"/#\">Climb Central Sports Hub</NavLink>\n                        <br />\n                        <NavLink to=\"/#\">Climb Central Novena</NavLink>\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                    Another gym\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>Location of gym (contains rotes)</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function AttComp({attempt}) {\n    return (\n        <tr>\n            <td>\n                {attempt.Name}\n            </td>\n            <td>\n                {attempt.Grade}\n            </td>\n            <td>\n                {attempt.Attempts}\n            </td>\n            <td>\n                {attempt.Color}\n            </td>\n            \n        </tr>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Table } from 'react-bootstrap';\nimport AttComp from './AttComp';\nimport { getAttemptsFromFirebase } from '../admin/AdminFunc';\nimport { useAuth } from '../contexts/AuthContext';\n\n\nexport default function Attempt() {\n    const[attempts, setAttempts] = useState([]);\n    const { currentUser } = useAuth();\n\n    function printAttemptOnPage(){\n        attempts[0].attemptedRoutes?.map(attempt=>{\n            <AttComp\n            key={attempt.id}\n            attempt={attempt} \n            />\n        })\n    }\n\n    useEffect(()=>{\n        getAttemptsFromFirebase(setAttempts, currentUser)\n\n        \n\n    },[])\n\n    return (\n        \n        <Table striped bordered>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Attempts</th>\n                    <th>Grade (Pie)</th>\n                    <th>Color</th>\n                </tr>\n            </thead>\n            <tbody>\n            {/**\n            */}\n            {attempts[0]?.attemptedRoutes.map(attempt=>(\n                <AttComp\n                key={attempt.id}\n                attempt={attempt} \n                />\n            ))}\n            </tbody>\n        </Table>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport Attempt from './Attempt';\nimport { Accordion, Card } from 'react-bootstrap';\n\nexport default function AccountView() {\n\n    return (\n        <div>\n            This will be the account view.\n\n            <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                    Attempted Route(s)\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                        <Attempt />\n                    </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n        )\n    }\n    \n    // <Card>\n    //     <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n    //     Favourite(s)\n    //     </Accordion.Toggle>\n    //     <Accordion.Collapse eventKey=\"0\">\n    //     <Card.Body>\n    //         <AccountFave fave={fave}/>\n    //     </Card.Body>\n    //     </Accordion.Collapse>\n    // </Card>","// For log in/account authentication purposes\nimport Login from './account/Login';\nimport { AuthProvider } from './contexts/AuthContext';\nimport Dashboard from './components/Dashboard';\nimport Signup from './account/Signup';\nimport ForgotPassword from './account/ForgotPassword'; \nimport Profile from './components/Profile';\nimport Private from './components/Private';\nimport UpdateProfile from './account/UpdateProfile'\n\n\n//regular imports for app usages.\nimport React, { useEffect, useState } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {Container} from 'react-bootstrap';\nimport Navigation from './components/Navigation';\nimport { getRoutesFromFirebase } from './admin/AdminFunc';\nimport Routes from './components/Routes';\nimport Home from './components/Home';\nimport AccountView from './account/AccountView';\n\n\nfunction App(){\n  const [routes, setRoutes] = useState([]);\n  const [faveRoutes, setFaveRoutes] = useState([]);\n  \n  useEffect(()=>{\n    getRoutesFromFirebase(setRoutes)\n\n  }, [])\n  \n\n  return(\n    \n        \n          <BrowserRouter>\n            <Navigation />\n            <AuthProvider>\n              <Switch>\n              \n              \n              <Route path=\"/home\">\n              <Home />\n              </Route>\n              <Route path=\"/routes\" >\n              <Routes fave={faveRoutes} setFave={setFaveRoutes} routesProps={routes} />\n              </Route>\n              <Private path=\"/account\" component={AccountView} fave={faveRoutes}/>\n              <Private path=\"/profile\" component={Profile} />\n              \n              {/** Log in/ account paths. Will delve deeper in profiles,\n              once basic functions of adding attempts done. */}\n              <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n                <div className=\"w-100\" style={{ maxWidth: \"400px\" }}> \n                  <Private path=\"/logout\" exact component={Dashboard}/>\n                  <Private path=\"/update-profile\" component={UpdateProfile} />\n                  <Route path=\"/signup\" component={Signup} />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/forgot-password\" component={ForgotPassword} />\n                </div>\n              </Container> \n\n\n                </Switch>\n              </AuthProvider>\n            </BrowserRouter>\n         \n        \n        \n    \n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}